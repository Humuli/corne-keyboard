/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hml: homewrow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEWROW_MODS_LEFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            hold-trigger-key-positions = <6 11 10 9 20 8 7 31 30 18 19 32 21 33 34 22 35 23>;
            flavor = "tap-preferred";
        };

        hmr: homewrow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEWROW_MODS_RIGHT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            hold-trigger-key-positions = <1 0 24 13 26 12 25 2 14 3 27 15 4 16 29 5 17 28>;
            flavor = "tap-preferred";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            display-name = "Base";
            bindings = <
&kp LALT   &kp Q             &kp W         &kp E        &hml LG(R) R  &hml LG(T) T           &kp Y      &kp U  &kp I      &kp O    &kp P                     &kp BSPC
&kp TAB    &hml LA(LCTRL) A  &hml LCTRL S  &hml LALT D  &hml LGUI F   &hml LA(LC(LGUI)) G    &kp H      &kp J  &kp K      &kp L    &hmr LA(LEFT_SHIFT) SEMI  &kp SQT
&kp LSHFT  &kp Z             &kp X         &kp C        &kp V         &kp B                  &kp N      &kp M  &kp COMMA  &kp DOT  &kp FSLH                  &kp ESC
                                           &kp LGUI     &mo 1         &kp ENTER              &kp SPACE  &mo 2  &kp LCTRL
            >;
        };

        Lower {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Lower";
            bindings = <
&trans     &kp NUMBER_1      &kp NUMBER_2       &kp NUMBER_3  &kp NUMBER_4  &kp N5       &kp NUMBER_6   &kp N7    &kp N8            &kp N9     &kp N0  &kp BSPC
&trans     &trans            &trans             &trans        &trans        &trans       &kp LEFT       &kp DOWN  &kp UP            &kp RIGHT  &trans  &trans
&kp LSHFT  &ext_power EP_ON  &ext_power EP_OFF  &none         &none         &none        &trans         &trans    &trans            &trans     &trans  &trans
                                                &kp LGUI      &trans        &kp ENTER    &kp BACKSPACE  &trans    &kp LEFT_CONTROL
            >;
        };

        Raise {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            display-name = "Raise";
            bindings = <
&kp LALT   &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT      &kp CARET  &kp AMPS  &kp ASTERISK  &none  &none     &kp BSPC
&kp TAB    &none     &none   &kp LBRC  &kp RBRC  &kp EQUAL      &kp MINUS  &kp LPAR  &kp RPAR      &none  &kp BSLH  &kp GRAVE
&kp LSHFT  &none     &none   &none     &none     &kp PLUS       &kp UNDER  &kp LBKT  &kp RBKT      &none  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &kp LG(TAB)    &trans     &trans    &kp LCTRL
            >;
        };

        Both {
            bindings = <
&kp C_NEXT        &kp LA(LC(LG(Q)))  &kp LA(LC(LG(W)))  &kp LA(LC(LG(E)))  &kp LA(LC(LG(R)))  &kp LA(LC(LG(T)))    &kp LC(NUMBER_1)    &kp LC(NUMBER_2)  &kp LC(NUMBER_3)  &kp LC(NUMBER_4)  &kp LA(LC(LG(L)))  &kp C_VOLUME_UP
&kp C_PREV        &trans             &none              &trans             &trans             &trans               &kp LC(LEFT_ARROW)  &trans            &trans            &kp LC(RIGHT)     &trans             &kp C_VOL_DN
&kp C_PLAY_PAUSE  &trans             &none              &trans             &trans             &trans               &trans              &trans            &trans            &trans            &trans             &trans
                                                        &trans             &trans             &trans               &trans              &trans            &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        Both {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
